name: 🛡️ Quality Gate - Zero Error Deployment

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

concurrency:
  group: quality-gate-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality-gate:
    name: 🔍 Code Quality Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 🔧 Install Dependencies
      run: |
        npm ci --prefer-offline --no-audit
        
    - name: 🧹 ESLint Analysis
      run: |
        npx eslint . --ext .js,.jsx,.ts,.tsx --format json --output-file eslint-report.json || true
        npx eslint . --ext .js,.jsx,.ts,.tsx
      continue-on-error: false

    - name: 🔍 Code Formatting Check
      run: |
        if [ -f ".prettierrc" ]; then
          npx prettier --check "**/*.{js,jsx,ts,tsx,css,md,json}"
        fi

    - name: 🏗️ Build Validation
      run: |
        npm run build
        
    - name: 🧪 Type Check (if TypeScript)
      run: |
        if [ -f "tsconfig.json" ]; then
          npx tsc --noEmit
        fi
        
    - name: 📊 Bundle Size Analysis
      run: |
        if [ -d "out" ] || [ -d ".next" ] || [ -d "dist" ]; then
          echo "📦 Build size analysis:"
          du -sh out/ .next/ dist/ 2>/dev/null || true
        fi

    - name: ✅ Quality Gate Status
      run: |
        echo "🎯 Quality Gate: PASSED ✅"
        echo "🔍 Code quality verified"
        echo "🏗️ Build successful"
        echo "📊 All checks completed"

    # Slack notification (optional)
    - name: 📢 Notify Success
      if: success()
      run: |
        echo "✅ Quality Gate passed for ${{ github.repository }}"
        
    - name: 🚨 Notify Failure  
      if: failure()
      run: |
        echo "❌ Quality Gate failed for ${{ github.repository }}"
        echo "Please fix the issues before merging"
        exit 1
